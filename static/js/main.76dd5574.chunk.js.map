{"version":3,"sources":["logo.svg","components/TopBar.js","components/MovieItem.js","components/MovieList.js","api/Key.js","api/FetchMovie.js","pages/Home.js","pages/Movie.js","pages/News.js","pages/Contact.js","pages/Detail.js","App.js","serviceWorker.js","reducers/movieReducer.js","index.js"],"names":["module","exports","TopBar","useState","isOpen","setIsOpen","Navbar","expand","Container","NavbarBrand","href","src","process","alt","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","tag","RRNavLink","exact","to","Input","type","placeholder","MovieItem","id","title","poster_path","release_date","vote_average","original_language","adult","MovieList","movielist","scrollSlider","section","direction","slider","document","querySelector","scrollAmount","slideTimer","setInterval","scrollLeft","clientWidth","window","clearInterval","results","length","e","map","movie","index","key","Key","fetchMovie","a","async","page","language","region","axios","get","then","res","data","catch","err","console","log","Home","nowPlayingMovies","setNowPlayingMovies","popularMovies","setPopularMovies","topRatedMovies","setTopRatedMovies","upcomingMovies","setUpComingMovies","useEffect","fetchNowPlayingMovies","fetchPopularMovies","fetchTopRatedMovies","fetchUpcomingMovies","Button","style","width","height","marginTop","Spinner","Movie","props","matchedResults","setMatchedResults","keywords","useSelector","state","defaultState","displayMovies","history","push","overview","News","Contact","Detail","movieid","match","params","setData","videos","setVideos","recommendedMovies","setRecommendedMovies","similarMovies","setSimilarMovies","fetchDetail","loadVideo","loadSimilarMovies","loadRecommendedMovies","location","pathname","displayVideos","video","maxWidth","status","runtime","genres","genre","name","tagline","production_countries","country","production_companies","company","logo_path","App","basename","path","component","Boolean","hostname","movieReducer","action","payload","Movies","createStore","reducer","ReactDOM","render","store","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.76dd5574.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { useState } from 'react'\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    NavbarText,\r\n    Container,\r\n    Input,\r\n    Button\r\n} from 'reactstrap';\r\nimport { NavLink as RRNavLink } from 'react-router-dom'\r\n\r\nconst TopBar = () => {\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    return (\r\n        <div>\r\n            <Navbar expand=\"md\">\r\n                <Container>\r\n                    <NavbarBrand href='/'><img src={process.env.PUBLIC_URL + \"/assets/images/logo.svg\"} alt=\"logo\" /></NavbarBrand>\r\n                    <NavbarToggler onClick={toggle} />\r\n                    <Collapse isOpen={isOpen} navbar>\r\n                        <Nav className=\"mr-auto\" navbar>\r\n                            <NavItem>\r\n                                <NavLink tag={RRNavLink} exact to='/'>home</NavLink>\r\n                            </NavItem>             \r\n                            <NavItem>\r\n                                <NavLink tag={RRNavLink} exact to='/movie'>movie</NavLink>\r\n                            </NavItem>             \r\n                            <NavItem>\r\n                                <NavLink tag={RRNavLink} exact to='/news'>news</NavLink>\r\n                            </NavItem>                          \r\n                            <NavItem>\r\n                                <NavLink tag={RRNavLink} exact to='/contact'>contact</NavLink>\r\n                            </NavItem>               \r\n                        </Nav>                        \r\n                        <Input className=\"ml-sm-auto mr-2\" type=\"text\" placeholder=\"Search keywords...\" />\r\n                        {/* <Button className=\"primaryBtn--outline mt-2 mt-sm-0\">Login</Button>                         */}\r\n                    </Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopBar\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst MovieItem = ({ id, title, poster_path, release_date, vote_average, original_language, adult }) => {\r\n\r\n    return (\r\n        <div className=\"movie-slider-item\">\r\n\r\n            <img src={\"http://image.tmdb.org/t/p/w154/\" + poster_path} />\r\n\r\n            <div className=\"movie-slider-item-header\">\r\n                <NavLink className=\"hero-title\" to={`/m/${id}`}>{title}</NavLink>\r\n            </div>\r\n\r\n            <div className=\"d-flex align-items-center\">\r\n                <img className=\"icon\" src={process.env.PUBLIC_URL + '/assets/images/calendar.svg'} alt=\"calendar\" />\r\n                <p className=\"movie-slider-item-releaseDate my-0 mt-1 pl-2\">{release_date}</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex align-items-center\">\r\n                <img className=\"icon\" src={process.env.PUBLIC_URL + \"/assets/images/Star.svg\"} alt=\"rating\" />\r\n                <p className=\"my-0 mt-1 pl-2 movie-slider-item-rating\">{vote_average}</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex align-items-center\">\r\n                <img className=\"icon\" src={process.env.PUBLIC_URL + \"/assets/images/Tag.svg\"} alt=\"tag\" />\r\n                <p className=\"movie-slider-item-description my-0 mt-1 pl-2\">{adult ? 'Adult, ' : null} {original_language}</p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieItem\r\n","import React from 'react'\r\nimport MovieItem from './MovieItem'\r\n\r\nconst MovieList = ({ movielist, type }) => {\r\n\r\n    // const [ movingDirection, setMovingDirection ] = useState(\"\")    \r\n    const scrollSlider = (section, direction) => {\r\n        const slider = document.querySelector(`.${section}`);\r\n\r\n        switch(direction) {\r\n            case \"left\":                \r\n                // slider.classList.add('slide-left')                \r\n                var scrollAmount = 0;\r\n                var slideTimer = setInterval(function(){\r\n                    slider.scrollLeft -= 10;\r\n                    scrollAmount += 10;\r\n\r\n                    if( scrollAmount >= slider.clientWidth )\r\n                        window.clearInterval(slideTimer)\r\n                }, 3)\r\n                break;\r\n                \r\n            case \"right\":\r\n                var scrollAmount = 0;\r\n                var slideTimer = setInterval(function(){\r\n                    slider.scrollLeft += 10;\r\n                    scrollAmount += 10;\r\n\r\n                    if( scrollAmount >= slider.clientWidth )\r\n                        window.clearInterval(slideTimer)\r\n                }, 3)\r\n                break;\r\n        }    \r\n    }\r\n\r\n    return (\r\n        <>\r\n            {movielist.results.length > 0 ?\r\n                <>\r\n                    <div className={`movie-slider-innercontainer ${type}`}>\r\n                        <button className=\"btn-left\" onClick={e => scrollSlider(type, 'left')}></button>\r\n                        <button className=\"btn-right\" onClick={e => scrollSlider(type, 'right')}></button>\r\n                        {movielist.results.map((movie, index) =>\r\n                            <MovieItem\r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                title={movie.title}\r\n                                poster_path={movie.poster_path}\r\n                                release_date={movie.release_date}\r\n                                vote_average={movie.vote_average}\r\n                                adult={movie.adult}\r\n                                original_language={movie.original_language}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </>\r\n                : <p className=\"text-white-50\">No results</p>}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MovieList\r\n","export const Key = '26b58a5dfb2cc4733f2edd50edd8a201';","import axios from 'axios'\r\nimport {Key} from './Key'\r\n\r\nexport const fetchMovie = async (type, page = 1, language = \"en-US\", region = \"\") => {\r\n    return axios\r\n            .get(`https://api.themoviedb.org/3/movie/${type}?api_key=${Key}&page=${page}&language=${language}&region=${region}`)\r\n            .then(res => res.data)\r\n            .catch(err => console.log(err));    \r\n}","import React, { useState, useEffect, Suspense } from 'react'\r\nimport { Button, Spinner, Nav } from 'reactstrap'\r\nimport axios from 'axios'\r\nimport { NavLink } from 'react-router-dom'\r\nimport MovieList from '../components/MovieList'\r\nimport { fetchMovie } from '../api/FetchMovie';\r\n\r\nconst Home = () => {\r\n\r\n    const [nowPlayingMovies, setNowPlayingMovies] = useState()\r\n    const [popularMovies, setPopularMovies] = useState()\r\n    const [topRatedMovies, setTopRatedMovies] = useState()\r\n    const [upcomingMovies, setUpComingMovies] = useState()\r\n\r\n    useEffect(() => {\r\n        fetchNowPlayingMovies()\r\n        fetchPopularMovies()\r\n        fetchTopRatedMovies()\r\n        fetchUpcomingMovies()\r\n\r\n        return () => { console.log('closed home') }\r\n    }, [])\r\n\r\n\r\n    const fetchNowPlayingMovies = () => {\r\n        fetchMovie('now_playing')\r\n            .then(data => setNowPlayingMovies(data))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const fetchPopularMovies = () => {\r\n        fetchMovie('popular')\r\n            .then(data => setPopularMovies(data))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const fetchTopRatedMovies = () => {\r\n        fetchMovie('top_rated')\r\n            .then(data => setTopRatedMovies(data))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const fetchUpcomingMovies = () => {\r\n        fetchMovie('upcoming')\r\n            .then(data => setUpComingMovies(data))\r\n            .catch(err => console.log(err))        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"hero-section\">\r\n                <div className=\"container\">\r\n                    <div className=\"hero-content\">\r\n                        <strong className=\"hero-subdescription\">the world need a hero, <br />they got a guy</strong>\r\n                        <h3 className=\"hero-title\">Free guy</h3>\r\n                        <h6 className=\"hero-subtitle\">july 3</h6>\r\n                        <Button className=\"primaryBtn-bg\"><img style={{ width: \"20px\", height: \"20px\" }} alt=\"hero\" src={process.env.PUBLIC_URL + \"/assets/images/play.svg\"} /><div style={{ marginTop: \"5px\" }}>watch trailer</div></Button>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            <section className=\"category-section\">\r\n                <div className=\"container\">\r\n                    <div className=\"movie-slider-container\" >\r\n                        <h6 className=\"hero-title\">Now Playing</h6>\r\n                        {nowPlayingMovies ? <MovieList type=\"nowplaying\" movielist={nowPlayingMovies} /> : <Spinner />}\r\n                    </div>\r\n\r\n                    <div className=\"movie-slider-container\" >\r\n                        <h6 className=\"hero-title\">Popular</h6>\r\n                        <div className=\"movie-slider-innercontainer\">\r\n                            {popularMovies ? <MovieList type=\"popular\" movielist={popularMovies} /> : <Spinner />}\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"movie-slider-container\" >\r\n                        <h6 className=\"hero-title\">Top Rated</h6>\r\n                        <div className=\"movie-slider-innercontainer\">\r\n                            {topRatedMovies ? <MovieList type=\"toprated\" movielist={topRatedMovies} /> : <Spinner />}\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"movie-slider-container\" >\r\n                        <h6 className=\"hero-title\">Upcoming</h6>\r\n                        <div className=\"movie-slider-innercontainer\">\r\n                            {upcomingMovies ? <MovieList type=\"upcoming\" movielist={upcomingMovies} /> : <Spinner />}\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { fetchMovie } from '../api/FetchMovie'\r\nimport { Spinner } from 'reactstrap'\r\n\r\nconst Movie = (props) => {\r\n\r\n    // state\r\n    const [matchedResults, setMatchedResults] = useState([])\r\n\r\n    const keywords = useSelector(state => state.defaultState.keywords)\r\n\r\n    useEffect(() => {\r\n        console.log(props)\r\n        displayMovies()\r\n    }, [])\r\n    \r\n\r\n    useEffect(() => {\r\n        console.log(keywords)\r\n    }, [keywords])\r\n    \r\n    const displayMovies = () => {\r\n        \r\n        fetchMovie('now_playing')\r\n            .then(data => setMatchedResults(data.results))\r\n            .catch(err => console.log(err))\r\n    }    \r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"movie-list\">\r\n                    <h5>Sort by:</h5>\r\n                    <div className=\"d-flex\">\r\n                        <p>Latest</p>\r\n                        <p>Popular</p>\r\n                        <p>Upcoming</p>\r\n                    </div>\r\n                    {\r\n                        matchedResults.length > 0\r\n                            ? matchedResults.map((movie, index) => (                                \r\n                                <div className=\"movie-list__column\" onClick={e => props.history.push(`/m/${movie.id}`)}>\r\n                                    <div className=\"movie-list__column-container\" key={index}>\r\n                                        <img alt={movie.title} className=\"movie-list__column-poster\" src={\"http://image.tmdb.org/t/p/w300/\" + movie.poster_path} />\r\n\r\n                                        <div className=\"movie-list__column-info\">\r\n\r\n                                            <h5 className=\"movie-list__column-title\">{movie.title}</h5>\r\n                                            <p className=\"movie-list__column-description\">{movie.overview}</p>\r\n\r\n                                            <div className=\"d-flex align-items-center\">\r\n                                                <img className=\"icon\" src={process.env.PUBLIC_URL + '/assets/images/calendar.svg'} alt=\"calendar\" />\r\n                                                <p className=\"movie-slider-item-releaseDate my-0 mt-1 pl-2\">{movie.release_date}</p>\r\n                                            </div>\r\n\r\n                                            <div className=\"d-flex align-items-center\">\r\n                                                <img className=\"icon\" src={process.env.PUBLIC_URL + \"/assets/images/Star.svg\"} alt=\"rating\" />\r\n                                                <p className=\"my-0 mt-1 pl-2 movie-slider-item-rating\">{movie.vote_average}</p>\r\n                                            </div>\r\n\r\n                                            <div className=\"d-flex align-items-center\">\r\n                                                <img className=\"icon\" src={process.env.PUBLIC_URL + \"/assets/images/Tag.svg\"} alt=\"tag\" />\r\n                                                <p className=\"movie-slider-item-description my-0 mt-1 pl-2\">{movie.adult ? 'Adult, ' : null} {movie.original_language}</p>\r\n                                            </div>                                            \r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                            : <Spinner />\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Movie\r\n","import React from 'react'\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News\r\n","import React from 'react'\r\n\r\nconst Contact = () => {\r\n    return (\r\n        <div>\r\n            Contact\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport { Spinner } from 'reactstrap'\r\nimport { Key } from '../api/Key'\r\nimport MovieList from '../components/MovieList'\r\n\r\nconst Detail = (props) => {\r\n\r\n    const { movieid } = props.match.params\r\n\r\n    const [data, setData] = useState()\r\n    const [videos, setVideos] = useState([])\r\n    const [recommendedMovies, setRecommendedMovies] = useState([])\r\n    const [similarMovies, setSimilarMovies] = useState([])\r\n\r\n    useEffect(() => {        \r\n        fetchDetail()\r\n        loadVideo()\r\n        loadSimilarMovies()\r\n        loadRecommendedMovies()             \r\n    }, [props.location.pathname])\r\n\r\n    useEffect(() => {\r\n        console.log(recommendedMovies)\r\n    }, [recommendedMovies])\r\n\r\n    const fetchDetail = () => {\r\n        axios\r\n            .get(`https://api.themoviedb.org/3/movie/${movieid}?api_key=${Key}`)\r\n            .then(res => setData(res.data))\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    const loadVideo = () => {\r\n        axios\r\n            .get(`https://api.themoviedb.org/3/movie/${movieid}/videos?api_key=${Key}`)\r\n            .then(res => setVideos(res.data.results))\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    const loadRecommendedMovies = () => {\r\n        axios\r\n            .get(`https://api.themoviedb.org/3/movie/${movieid}/recommendations?api_key=${Key}`)\r\n            .then(res => setRecommendedMovies(res.data))\r\n            .catch(err => console.log(err));        \r\n    }\r\n\r\n    const loadSimilarMovies = () => {\r\n        axios\r\n            .get(`https://api.themoviedb.org/3/movie/${movieid}/similar?api_key=${Key}`)\r\n            .then(res => setSimilarMovies(res.data))\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    // sections\r\n    const mainSection = () => (\r\n        <>\r\n            <section className=\"movie-detail-section\">\r\n                <div className=\"container\">\r\n                    <div className=\"movie-detail-innercontainer\">\r\n\r\n                        <div className=\"movie-detail-poster\">\r\n                            <img style={{ maxWidth: \"500px\", width: \"100%\" }} src={\"http://image.tmdb.org/t/p/w500/\" + data.poster_path} />\r\n                        </div>\r\n\r\n                        <div className=\"movie-detail-content\">\r\n\r\n                            <strong className=\"hero-subtitle mt-0\">Released on {data.release_date}</strong>\r\n\r\n                            <div className=\"movie-detail-header\">\r\n                                <h5 className=\"hero-title\">{data.title}</h5>\r\n                            </div>\r\n\r\n                            <div className=\"movie-detail-column\">\r\n                                <b className=\"mr-auto\">Rating</b>\r\n                                <div>\r\n                                    <span className=\"movie-rating\">{data.vote_average}</span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"movie-detail-column\">\r\n                                <b className=\"mr-auto\">Status</b>\r\n                                <div>\r\n                                    <span className=\"movie-status\">{data.status}</span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"movie-detail-column\">\r\n                                <b className=\"mr-auto\">Duration</b>\r\n                                <div>\r\n                                    <p className=\"movie-runtime my-0\">{data.runtime} hours</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"movie-detail-column\">\r\n                                <b className=\"mr-auto\">Genres</b>\r\n                                <div>\r\n                                    <div className=\"d-flex flex-wrap\">\r\n                                        {data.genres.map((genre, index) => <span>{genre.name}{index === data.genres.length - 1 ? null : \", \"} </span>)}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"movie-detail-column\">\r\n                                <b className=\"mr-auto\">Overview</b>\r\n                                <div>\r\n                                    <strong className=\"movie-tagline\">{data.tagline ? '\"' + data.tagline + '\"' : null}</strong>\r\n                                    <p className=\"movie-overview\">\r\n                                        {data.overview}\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"movie-detail-column\">\r\n                                <b className=\"mr-auto\">Made from</b>\r\n                                <div className=\"d-flex\">\r\n                                    {data.production_countries.map(country => country && (\r\n                                        <span>{country.name} </span>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"d-flex\">\r\n\r\n                                {data.production_companies.map(company => company.logo_path && (\r\n                                    <img alt=\"logo\" className=\"company-logo\" src={'https://image.tmdb.org/t/p/w45/' + company.logo_path} />\r\n                                ))}\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n\r\n    const videoSection = () => (\r\n        <>\r\n            <section className=\"video-section\">\r\n                <div className=\"container\">\r\n                    <h6 className=\"hero-title\">Video</h6>\r\n                    {\r\n                        videos.length > 0\r\n                            ?\r\n                            <>\r\n                                <div className=\"video-list\">\r\n                                    {displayVideos()}\r\n                                </div>\r\n                            </>\r\n                            : <p className=\"text-white-50\">No video is found.</p>\r\n                    }\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n\r\n    const similarMovieSection = () => (\r\n        <>\r\n            <section className=\"similar-movie-section\">\r\n                <div className=\"container\">                    \r\n                    <div className=\"movie-slider-container\" > \r\n                        <h6 className=\"hero-title\">Similar Movie</h6>\r\n                        {similarMovies.results ? <MovieList type=\"similar\" movielist={similarMovies} /> : <Spinner />}                        \r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n\r\n    const recommendedSection = () => (\r\n        <>\r\n            <section className=\"recommended-movie-section\">\r\n                <div className=\"container\">                    \r\n                    <div className=\"movie-slider-container\" > \r\n                        <h6 className=\"hero-title\">Recommended Movie</h6>\r\n                        {recommendedMovies.results ? <MovieList type=\"recommended\" movielist={recommendedMovies} /> : <Spinner />}                        \r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n\r\n    // sub components\r\n    const displayVideos = () => (\r\n        <>\r\n            {\r\n                videos.map(video => {\r\n                    return (\r\n                        <>\r\n                            <iframe className=\"video\" src={`https://www.youtube.com/embed/${video.key}`} />\r\n                        </>\r\n                    )\r\n                })\r\n            }\r\n        </>\r\n    )\r\n\r\n    return (\r\n        <>\r\n            {data ? (\r\n                <>\r\n                    {mainSection()}\r\n                    {videoSection()}\r\n                    {similarMovieSection()}\r\n                    {recommendedSection()}\r\n\r\n                </>\r\n            ) : <Spinner />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Detail\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport TopBar from './components/TopBar';\r\nimport { HashRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\n// Pages\r\nimport Home from './pages/Home'\r\nimport Movie from './pages/Movie'\r\nimport News from './pages/News'\r\nimport Contact from './pages/Contact'\r\nimport Detail from './pages/Detail';\r\n\r\nfunction App() {  \r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router basename={'/vongcinema'}>    \r\n        <TopBar />\r\n        <Switch>\r\n          <Route path='/' exact component={Home} />\r\n          <Route path='/movie' exact component={Movie} />\r\n          <Route path='/news' exact component={News} />\r\n          <Route path='/contact' exact component={Contact} />\r\n          <Route path=\"/m/:movieid\" component={Detail} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst defaultState = {\r\n    keywords: \"\",\r\n    language: \"\",\r\n    region: \"\"\r\n}\r\n\r\nconst movieReducer = (state = defaultState, action) => {    \r\n    switch(action.type) {\r\n        case \"ADD_KEYWORD\": \r\n            return {                \r\n                ...defaultState,\r\n                keywords: action.payload,\r\n            }\r\n        case \"REMOVE_KEYWORD\":\r\n            return {                \r\n                ...defaultState,\r\n                keywords: \"\",\r\n            }            \r\n        case \"ADD_LANGUAGE\":\r\n            return {                \r\n                ...defaultState,\r\n                language: action.payload,\r\n            }\r\n        case \"REMOVE_LANGUAGE\":\r\n            return {                \r\n                ...defaultState,\r\n                language: \"\",\r\n            }          \r\n        case \"ADD_REGION\":\r\n            return {                \r\n                ...defaultState,\r\n                region: action.payload,\r\n            }\r\n        case \"REMOVE_REGION\":\r\n            return {                \r\n                ...defaultState,\r\n                region: \"\",\r\n            }          \r\n        default:\r\n            return {\r\n                defaultState\r\n            }\r\n    }\r\n}\r\n\r\nexport default movieReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Provider } from 'react-redux';\r\nimport reducer from './reducers/movieReducer';\r\nimport { createStore } from 'redux'\r\n\r\nconst Movies = createStore(reducer)\r\n\r\nReactDOM.render(\r\n    <Provider store={Movies}>\r\n        <App />\r\n    </Provider>, \r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}