{"version":3,"sources":["logo.svg","components/TopBar.js","components/MovieItem.js","components/MovieList.js","pages/Home.js","pages/Movie.js","pages/News.js","pages/Contact.js","api/Key.js","pages/Detail.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TopBar","useState","isOpen","setIsOpen","Navbar","expand","Container","NavbarBrand","href","src","alt","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","tag","RRNavLink","exact","to","Input","type","placeholder","Button","MovieItem","id","title","poster_path","release_date","vote_average","original_language","adult","MovieList","movielist","scrollSlider","section","direction","slider","document","querySelector","scrollLeft","results","length","e","map","movie","index","key","Home","nowPlayingMovies","setNowPlayingMovies","popularMovies","setPopularMovies","topRatedMovies","setTopRatedMovies","upcomingMovies","setUpComingMovies","useEffect","fetchNowPlayingMovies","fetchPopularMovies","fetchTopRatedMovies","fetchUpcomingMovies","console","log","axios","get","then","res","data","catch","err","style","width","height","marginTop","Spinner","Movie","News","Contact","Key","Detail","props","movieid","match","params","setData","videos","setVideos","recommendedMovies","setRecommendedMovies","similarMovies","setSimilarMovies","fetchDetail","loadVideo","loadSimilarMovies","loadRecommendedMovies","location","pathname","displayVideos","video","maxWidth","status","runtime","genres","genre","name","tagline","overview","production_countries","country","production_companies","company","logo_path","App","path","component","Boolean","window","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0e90f7f9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState } from 'react'\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    NavbarText,\r\n    Container,\r\n    Input,\r\n    Button\r\n} from 'reactstrap';\r\nimport { NavLink as RRNavLink } from 'react-router-dom'\r\n\r\nconst TopBar = () => {\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    return (\r\n        <div>\r\n            <Navbar expand=\"md\">\r\n                <Container>\r\n                    <NavbarBrand href=\"/\"><img src=\"/assets/images/logo.svg\" alt=\"logo\" /></NavbarBrand>\r\n                    <NavbarToggler onClick={toggle} />\r\n                    <Collapse isOpen={isOpen} navbar>\r\n                        <Nav className=\"mr-auto\" navbar>\r\n                            <NavItem>\r\n                                <NavLink tag={RRNavLink} exact to=\"/\">home</NavLink>\r\n                            </NavItem>             \r\n                            <NavItem>\r\n                                <NavLink tag={RRNavLink} exact to=\"/movie\">movie</NavLink>\r\n                            </NavItem>             \r\n                            <NavItem>\r\n                                <NavLink tag={RRNavLink} exact to=\"/news\">news</NavLink>\r\n                            </NavItem>                          \r\n                            <NavItem>\r\n                                <NavLink tag={RRNavLink} exact to=\"/contact\">contact</NavLink>\r\n                            </NavItem>               \r\n                        </Nav>                        \r\n                        <Input className=\"ml-sm-auto mr-2\" type=\"text\" placeholder=\"Search keywords...\" />\r\n                        <Button className=\"primaryBtn--outline mt-2 mt-sm-0\">Login</Button>                        \r\n                    </Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopBar\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst MovieItem = ({ id, title, poster_path, release_date, vote_average, original_language, adult }) => {\r\n\r\n    return (\r\n        <div className=\"movie-slider-item\">\r\n\r\n            <img src={\"http://image.tmdb.org/t/p/w154/\" + poster_path} />\r\n\r\n            <div className=\"movie-slider-item-header\">\r\n                <NavLink className=\"hero-title\" to={`/m/${id}`}>{title}</NavLink>\r\n            </div>\r\n\r\n            <div className=\"d-flex align-items-center\">\r\n                <img className=\"icon\" src=\"/assets/images/calendar.svg\" alt=\"calendar\" />\r\n                <p className=\"movie-slider-item-releaseDate my-0 mt-1 pl-2\">{release_date}</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex align-items-center\">\r\n                <img className=\"icon\" src=\"/assets/images/Star.svg\" alt=\"rating\" />\r\n                <p className=\"my-0 mt-1 pl-2 movie-slider-item-rating\">{vote_average}</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex align-items-center\">\r\n                <img className=\"icon\" src=\"/assets/images/Tag.svg\" alt=\"tag\" />\r\n                <p className=\"movie-slider-item-description my-0 mt-1 pl-2\">{adult ? 'Adult, ' : null} {original_language}</p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieItem\r\n","import React from 'react'\r\nimport MovieItem from './MovieItem'\r\n\r\nconst MovieList = ({ movielist, type }) => {\r\n\r\n    const scrollSlider = (section, direction) => {\r\n        const slider = document.querySelector(`.${section}`);\r\n        direction === \"left\" ? slider.scrollLeft -= 200 : slider.scrollLeft += 200\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {movielist.results.length > 0 ?\r\n                <>\r\n                    <div className={`movie-slider-innercontainer ${type}`}>\r\n                        <button className=\"btn-left\" onClick={e => scrollSlider(type, 'left')}></button>\r\n                        <button className=\"btn-right\" onClick={e => scrollSlider(type, 'right')}></button>\r\n                        {movielist.results.map((movie, index) =>\r\n                            <MovieItem\r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                title={movie.title}\r\n                                poster_path={movie.poster_path}\r\n                                release_date={movie.release_date}\r\n                                vote_average={movie.vote_average}\r\n                                adult={movie.adult}\r\n                                original_language={movie.original_language}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </>\r\n                : <p className=\"text-white-50\">No results</p>}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MovieList\r\n","import React, { useState, useEffect, Suspense } from 'react'\r\nimport { Button, Spinner, Nav } from 'reactstrap'\r\nimport axios from 'axios'\r\nimport { NavLink } from 'react-router-dom'\r\nimport MovieList from '../components/MovieList'\r\n\r\nconst Home = () => {\r\n\r\n    const [nowPlayingMovies, setNowPlayingMovies] = useState()\r\n    const [popularMovies, setPopularMovies] = useState()\r\n    const [topRatedMovies, setTopRatedMovies] = useState()\r\n    const [upcomingMovies, setUpComingMovies] = useState()\r\n\r\n    useEffect(() => {\r\n        fetchNowPlayingMovies()\r\n        fetchPopularMovies()\r\n        fetchTopRatedMovies()\r\n        fetchUpcomingMovies()\r\n\r\n        return () => { console.log('closed home') }\r\n    }, [])\r\n\r\n\r\n    const fetchNowPlayingMovies = () => {\r\n\r\n        axios\r\n            .get('https://api.themoviedb.org/3/movie/now_playing?api_key=26b58a5dfb2cc4733f2edd50edd8a201')\r\n            .then(res => setNowPlayingMovies(res.data))\r\n            .catch(err => console.log(err));\r\n\r\n    }\r\n\r\n    const fetchPopularMovies = () => {\r\n\r\n        axios\r\n            .get('https://api.themoviedb.org/3/movie/popular?api_key=26b58a5dfb2cc4733f2edd50edd8a201')\r\n            .then(res => setPopularMovies(res.data))\r\n            .catch(err => console.log(err));\r\n\r\n    }\r\n\r\n    const fetchTopRatedMovies = () => {\r\n\r\n        axios\r\n            .get('https://api.themoviedb.org/3/movie/top_rated?api_key=26b58a5dfb2cc4733f2edd50edd8a201')\r\n            .then(res => setTopRatedMovies(res.data))\r\n            .catch(err => console.log(err));\r\n\r\n    }\r\n\r\n    const fetchUpcomingMovies = () => {\r\n\r\n        axios\r\n            .get('https://api.themoviedb.org/3/movie/upcoming?api_key=26b58a5dfb2cc4733f2edd50edd8a201')\r\n            .then(res => setUpComingMovies(res.data))\r\n            .catch(err => console.log(err));\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"hero-section\">\r\n                <div className=\"container\">\r\n                    <div className=\"hero-content\">\r\n                        <strong className=\"hero-subdescription\">the world need a hero, <br />they got a guy</strong>\r\n                        <h3 className=\"hero-title\">Free guy</h3>\r\n                        <h6 className=\"hero-subtitle\">july 3</h6>\r\n                        <Button className=\"primaryBtn-bg\"><img style={{ width: \"20px\", height: \"20px\" }} src=\"/assets/images/play.svg\" /><div style={{ marginTop: \"5px\" }}>watch trailer</div></Button>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            <section className=\"category-section\">\r\n                <div className=\"container\">                    \r\n                    <div className=\"movie-slider-container\" >                                                    \r\n                    <h6 className=\"hero-title\">Now Playing</h6>\r\n                        {nowPlayingMovies ? <MovieList type=\"nowplaying\" movielist={nowPlayingMovies} /> : <Spinner />}                        \r\n                    </div>\r\n                    \r\n                    <div className=\"movie-slider-container\" >\r\n                        <h6 className=\"hero-title\">Popular</h6>\r\n                        <div className=\"movie-slider-innercontainer\">\r\n                            {popularMovies ? <MovieList type=\"popular\" movielist={popularMovies} /> : <Spinner />}                                                    \r\n                        </div>\r\n\r\n                    </div>\r\n                    \r\n                    <div className=\"movie-slider-container\" >\r\n                        <h6 className=\"hero-title\">Top Rated</h6>\r\n                        <div className=\"movie-slider-innercontainer\">\r\n                            {topRatedMovies ? <MovieList type=\"toprated\" movielist={topRatedMovies} /> : <Spinner />}                             \r\n                        </div>\r\n\r\n                    </div>\r\n                    \r\n                    <div className=\"movie-slider-container\" >\r\n                        <h6 className=\"hero-title\">Upcoming</h6>\r\n                        <div className=\"movie-slider-innercontainer\">\r\n                            {upcomingMovies ? <MovieList type=\"upcoming\" movielist={upcomingMovies} /> : <Spinner />}                             \r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\n\r\nconst Movie = () => {\r\n    return (\r\n        <div>\r\n            Movie\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Movie\r\n","import React from 'react'\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News\r\n","import React from 'react'\r\n\r\nconst Contact = () => {\r\n    return (\r\n        <div>\r\n            Contact\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact\r\n","export const Key = '26b58a5dfb2cc4733f2edd50edd8a201';","import React, { useEffect, useState, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport { Spinner } from 'reactstrap'\r\nimport { Key } from '../api/Key'\r\nimport MovieList from '../components/MovieList'\r\n\r\nconst Detail = (props) => {\r\n\r\n    const { movieid } = props.match.params\r\n\r\n    const [data, setData] = useState()\r\n    const [videos, setVideos] = useState([])\r\n    const [recommendedMovies, setRecommendedMovies] = useState([])\r\n    const [similarMovies, setSimilarMovies] = useState([])\r\n\r\n    useEffect(() => {        \r\n        fetchDetail()\r\n        loadVideo()\r\n        loadSimilarMovies()\r\n        loadRecommendedMovies()             \r\n    }, [props.location.pathname])\r\n\r\n    useEffect(() => {\r\n        console.log(recommendedMovies)\r\n    }, [recommendedMovies])\r\n\r\n    const fetchDetail = () => {\r\n        axios\r\n            .get(`https://api.themoviedb.org/3/movie/${movieid}?api_key=${Key}`)\r\n            .then(res => setData(res.data))\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    const loadVideo = () => {\r\n        axios\r\n            .get(`https://api.themoviedb.org/3/movie/${movieid}/videos?api_key=${Key}`)\r\n            .then(res => setVideos(res.data.results))\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    const loadRecommendedMovies = () => {\r\n        axios\r\n            .get(`https://api.themoviedb.org/3/movie/${movieid}/recommendations?api_key=${Key}`)\r\n            .then(res => setRecommendedMovies(res.data))\r\n            .catch(err => console.log(err));        \r\n    }\r\n\r\n    const loadSimilarMovies = () => {\r\n        axios\r\n            .get(`https://api.themoviedb.org/3/movie/${movieid}/similar?api_key=${Key}`)\r\n            .then(res => setSimilarMovies(res.data))\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    // sections\r\n    const mainSection = () => (\r\n        <>\r\n            <section className=\"movie-detail-section\">\r\n                <div className=\"container\">\r\n                    <div className=\"movie-detail-innercontainer\">\r\n\r\n                        <div className=\"movie-detail-poster\">\r\n                            <img style={{ maxWidth: \"500px\", width: \"100%\" }} src={\"http://image.tmdb.org/t/p/w500/\" + data.poster_path} />\r\n                        </div>\r\n\r\n                        <div className=\"movie-detail-content\">\r\n\r\n                            <strong className=\"hero-subtitle mt-0\">Released on {data.release_date}</strong>\r\n\r\n                            <div className=\"movie-detail-header\">\r\n                                <h5 className=\"hero-title\">{data.title}</h5>\r\n                            </div>\r\n\r\n                            <div className=\"movie-detail-column\">\r\n                                <b className=\"mr-auto\">Rating</b>\r\n                                <div>\r\n                                    <span className=\"movie-rating\">{data.vote_average}</span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"movie-detail-column\">\r\n                                <b className=\"mr-auto\">Status</b>\r\n                                <div>\r\n                                    <span className=\"movie-status\">{data.status}</span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"movie-detail-column\">\r\n                                <b className=\"mr-auto\">Duration</b>\r\n                                <div>\r\n                                    <p className=\"movie-runtime my-0\">{data.runtime} hours</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"movie-detail-column\">\r\n                                <b className=\"mr-auto\">Genres</b>\r\n                                <div>\r\n                                    <div className=\"d-flex flex-wrap\">\r\n                                        {data.genres.map((genre, index) => <span>{genre.name}{index === data.genres.length - 1 ? null : \", \"} </span>)}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"movie-detail-column\">\r\n                                <b className=\"mr-auto\">Overview</b>\r\n                                <div>\r\n                                    <strong className=\"movie-tagline\">{data.tagline ? '\"' + data.tagline + '\"' : null}</strong>\r\n                                    <p className=\"movie-overview\">\r\n                                        {data.overview}\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"movie-detail-column\">\r\n                                <b className=\"mr-auto\">Made from</b>\r\n                                <div className=\"d-flex\">\r\n                                    {data.production_countries.map(country => country && (\r\n                                        <span>{country.name} </span>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"d-flex\">\r\n\r\n                                {data.production_companies.map(company => company.logo_path && (\r\n                                    <img className=\"company-logo\" src={'https://image.tmdb.org/t/p/w45/' + company.logo_path} />\r\n                                ))}\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n\r\n    const videoSection = () => (\r\n        <>\r\n            <section className=\"video-section\">\r\n                <div className=\"container\">\r\n                    <h6 className=\"hero-title\">Video</h6>\r\n                    {\r\n                        videos.length > 0\r\n                            ?\r\n                            <>\r\n                                <div className=\"video-list\">\r\n                                    {displayVideos()}\r\n                                </div>\r\n                            </>\r\n                            : <p className=\"text-white-50\">No video is found.</p>\r\n                    }\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n\r\n    const similarMovieSection = () => (\r\n        <>\r\n            <section className=\"similar-movie-section\">\r\n                <div className=\"container\">                    \r\n                    <div className=\"movie-slider-container\" > \r\n                        <h6 className=\"hero-title\">Similar Movie</h6>\r\n                        {similarMovies.results ? <MovieList type=\"similar\" movielist={similarMovies} /> : <Spinner />}                        \r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n\r\n    const recommendedSection = () => (\r\n        <>\r\n            <section className=\"recommended-movie-section\">\r\n                <div className=\"container\">                    \r\n                    <div className=\"movie-slider-container\" > \r\n                        <h6 className=\"hero-title\">Recommended Movie</h6>\r\n                        {recommendedMovies.results ? <MovieList type=\"recommended\" movielist={recommendedMovies} /> : <Spinner />}                        \r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n\r\n    // sub components\r\n    const displayVideos = () => (\r\n        <>\r\n            {\r\n                videos.map(video => {\r\n                    return (\r\n                        <>\r\n                            <iframe className=\"video\" src={`https://www.youtube.com/embed/${video.key}`} />\r\n                        </>\r\n                    )\r\n                })\r\n            }\r\n        </>\r\n    )\r\n\r\n    return (\r\n        <>\r\n            {data ? (\r\n                <>\r\n                    {mainSection()}\r\n                    {videoSection()}\r\n                    {similarMovieSection()}\r\n                    {recommendedSection()}\r\n\r\n                </>\r\n            ) : <Spinner />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Detail\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport TopBar from './components/TopBar';\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom'\n\n// Pages\nimport Home from './pages/Home'\nimport Movie from './pages/Movie'\nimport News from './pages/News'\nimport Contact from './pages/Contact'\nimport Detail from './pages/Detail';\n\nfunction App() {  \n\n  return (\n    <div className=\"App\">\n      <Router>    \n        <TopBar />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/movie\" exact component={Movie} />\n          <Route path=\"/news\" exact component={News} />\n          <Route path=\"/contact\" exact component={Contact} />\n          <Route path=\"/m/:movieid\" exact component={Detail} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}