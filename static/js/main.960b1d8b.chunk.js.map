{"version":3,"sources":["logo.svg","components/TopBar.js","components/MovieItem.js","components/MovieList.js","api/FetchMovie.js","pages/Home.js","reducers/filterMovieReducer.js","contexts/FilterMovieContext.js","components/Pagination.js","pages/Movie.js","pages/News.js","pages/Contact.js","pages/Detail.js","App.js","serviceWorker.js","reducers/movieReducer.js","index.js"],"names":["module","exports","TopBar","useState","isOpen","setIsOpen","Navbar","expand","Container","NavbarBrand","onClick","e","window","location","href","src","process","alt","className","Collapse","navbar","Nav","NavItem","NavLink","tag","RRNavLink","exact","to","Input","type","placeholder","MovieItem","id","title","poster_path","release_date","vote_average","original_language","adult","MovieList","movielist","scrollSlider","section","direction","slider","document","querySelector","scrollAmount","slideTimer","setInterval","scrollLeft","clientWidth","clearInterval","results","length","map","movie","index","key","Key","fetchMovie","a","async","page","language","region","console","log","axios","get","then","res","data","catch","err","Home","nowPlayingMovies","setNowPlayingMovies","popularMovies","setPopularMovies","topRatedMovies","setTopRatedMovies","upcomingMovies","setUpComingMovies","useEffect","fetchNowPlayingMovies","fetchPopularMovies","fetchTopRatedMovies","fetchUpcomingMovies","Button","style","width","height","marginTop","Spinner","filterMovieReducer","state","action","tag_name","tag_index","FilterMovieContext","createContext","FilterMovieContextProvider","props","useReducer","localData","localStorage","getItem","JSON","parse","dispatch","setItem","stringify","Provider","value","children","Pagination","history","number","currentPage","push","Movie","require","search","setTags","totalPages","setTotalPages","matchedResults","setMatchedResults","useContext","keywords","useSelector","defaultState","querySelectorAll","_displayMovies","_createPaginationNumber","category","total_pages","elements","i","_changeTag","xmlns","viewBox","data-name","d","x","y","fill","clip-path","overview","News","Contact","Detail","movieid","match","params","setData","videos","setVideos","recommendedMovies","setRecommendedMovies","similarMovies","setSimilarMovies","fetchDetail","loadVideo","loadSimilarMovies","loadRecommendedMovies","pathname","displayVideos","video","maxWidth","status","runtime","genres","genre","name","tagline","production_countries","country","production_companies","company","logo_path","App","path","component","Boolean","hostname","movieReducer","payload","Movies","createStore","reducer","ReactDOM","render","store","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.960b1d8b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { useState } from 'react'\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    NavbarText,\r\n    Container,\r\n    Input,\r\n    Button\r\n} from 'reactstrap';\r\nimport { NavLink as RRNavLink } from 'react-router-dom'\r\n\r\nconst TopBar = () => {\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    return (\r\n        <div>\r\n            <Navbar expand=\"md\">\r\n                <Container>\r\n                    <NavbarBrand onClick={e => window.location.href=\"/\"}><img src={process.env.PUBLIC_URL + \"/assets/images/logo.svg\"} alt=\"logo\" /></NavbarBrand>\r\n                    <img className=\"menu\" onClick={e => toggle()} src={process.env.PUBLIC_URL + \"/assets/images/Menu.svg\"} alt=\"menu\"/>\r\n                    <Collapse isOpen={isOpen} navbar>\r\n                        <Nav className=\"mr-auto\" navbar>\r\n                            <NavItem>\r\n                                <NavLink tag={RRNavLink} exact to='/'>home</NavLink>\r\n                            </NavItem>             \r\n                            <NavItem>\r\n                                <NavLink tag={RRNavLink} exact to='/movie?page=1'>movie</NavLink>\r\n                            </NavItem>             \r\n                            <NavItem>\r\n                                <NavLink tag={RRNavLink} exact to='/news'>news</NavLink>\r\n                            </NavItem>                          \r\n                            <NavItem>\r\n                                <NavLink tag={RRNavLink} exact to='/contact'>contact</NavLink>\r\n                            </NavItem>               \r\n                        </Nav>                        \r\n                        <Input className=\"ml-sm-auto mr-2\" type=\"text\" placeholder=\"Search keywords...\" />\r\n                        {/* <Button className=\"primaryBtn--outline mt-2 mt-sm-0\">Login</Button>                         */}\r\n                    </Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopBar\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst MovieItem = ({ id, title, poster_path, release_date, vote_average, original_language, adult }) => {\r\n\r\n    return (\r\n        <div className=\"movie-slider-item\">\r\n\r\n            <img src={\"http://image.tmdb.org/t/p/w154/\" + poster_path} />\r\n\r\n            <div className=\"movie-slider-item-header\">\r\n                <NavLink className=\"hero-title\" to={`/m/${id}`}>{title}</NavLink>\r\n            </div>\r\n\r\n            <div className=\"d-flex align-items-center\">\r\n                <img className=\"icon\" src={process.env.PUBLIC_URL + '/assets/images/calendar.svg'} alt=\"calendar\" />\r\n                <p className=\"movie-slider-item-releaseDate my-0 mt-1 pl-2\">{release_date}</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex align-items-center\">\r\n                <img className=\"icon\" src={process.env.PUBLIC_URL + \"/assets/images/Star.svg\"} alt=\"rating\" />\r\n                <p className=\"my-0 mt-1 pl-2 movie-slider-item-rating\">{vote_average}</p>\r\n            </div>\r\n\r\n            <div className=\"d-flex align-items-center\">\r\n                <img className=\"icon\" src={process.env.PUBLIC_URL + \"/assets/images/Tag.svg\"} alt=\"tag\" />\r\n                <p className=\"movie-slider-item-description my-0 mt-1 pl-2\">{adult ? 'Adult, ' : null} {original_language}</p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieItem\r\n","import React from 'react'\r\nimport MovieItem from './MovieItem'\r\n\r\nconst MovieList = ({ movielist, type }) => {\r\n\r\n    // const [ movingDirection, setMovingDirection ] = useState(\"\")    \r\n    const scrollSlider = (section, direction) => {\r\n        const slider = document.querySelector(`.${section}`);\r\n\r\n        switch(direction) {\r\n            case \"left\":                \r\n                // slider.classList.add('slide-left')                \r\n                var scrollAmount = 0;\r\n                var slideTimer = setInterval(function(){\r\n                    slider.scrollLeft -= 10;\r\n                    scrollAmount += 10;\r\n\r\n                    if( scrollAmount >= slider.clientWidth )\r\n                        window.clearInterval(slideTimer)\r\n                }, 3)\r\n                break;\r\n                \r\n            case \"right\":\r\n                var scrollAmount = 0;\r\n                var slideTimer = setInterval(function(){\r\n                    slider.scrollLeft += 10;\r\n                    scrollAmount += 10;\r\n\r\n                    if( scrollAmount >= slider.clientWidth )\r\n                        window.clearInterval(slideTimer)\r\n                }, 3)\r\n                break;\r\n        }    \r\n    }\r\n\r\n    return (\r\n        <>\r\n            {movielist.results.length > 0 ?\r\n                <>\r\n                    <div className={`movie-slider-innercontainer ${type}`}>\r\n                        <button className=\"btn-left\" onClick={e => scrollSlider(type, 'left')}></button>\r\n                        <button className=\"btn-right\" onClick={e => scrollSlider(type, 'right')}></button>\r\n                        {movielist.results.map((movie, index) =>\r\n                            <MovieItem\r\n                                key={movie.id}\r\n                                id={movie.id}\r\n                                title={movie.title}\r\n                                poster_path={movie.poster_path}\r\n                                release_date={movie.release_date}\r\n                                vote_average={movie.vote_average}\r\n                                adult={movie.adult}\r\n                                original_language={movie.original_language}\r\n                            />\r\n                        )}\r\n                    </div>\r\n                </>\r\n                : <p className=\"text-white-50\">No results</p>}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MovieList\r\n","import axios from 'axios'\r\n\r\nconst Key = `${process.env.REACT_APP_KEY}`;\r\n\r\nexport const fetchMovie = async (type, page = 1, language = \"en-US\", region = \"\") => {\r\n    console.log(type, page)\r\n    return axios\r\n            .get(`https://api.themoviedb.org/3/movie/${type}?api_key=${Key}&page=${page}&language=${language}&region=${region}`)\r\n            .then(res => res.data)\r\n            .catch(err => console.log(err));    \r\n}","import React, { useState, useEffect, Suspense } from 'react'\r\nimport { Button, Spinner, Nav } from 'reactstrap'\r\nimport axios from 'axios'\r\nimport { NavLink } from 'react-router-dom'\r\nimport MovieList from '../components/MovieList'\r\nimport { fetchMovie } from '../api/FetchMovie';\r\n\r\nconst Home = () => {\r\n\r\n    const [nowPlayingMovies, setNowPlayingMovies] = useState()\r\n    const [popularMovies, setPopularMovies] = useState()\r\n    const [topRatedMovies, setTopRatedMovies] = useState()\r\n    const [upcomingMovies, setUpComingMovies] = useState()\r\n\r\n    useEffect(() => {\r\n        fetchNowPlayingMovies()\r\n        fetchPopularMovies()\r\n        fetchTopRatedMovies()\r\n        fetchUpcomingMovies()\r\n\r\n        return () => { console.log('closed home') }\r\n    }, [])\r\n\r\n\r\n    const fetchNowPlayingMovies = () => {\r\n        fetchMovie('now_playing')\r\n            .then(data => setNowPlayingMovies(data))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const fetchPopularMovies = () => {\r\n        fetchMovie('popular')\r\n            .then(data => setPopularMovies(data))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const fetchTopRatedMovies = () => {\r\n        fetchMovie('top_rated')\r\n            .then(data => setTopRatedMovies(data))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const fetchUpcomingMovies = () => {\r\n        fetchMovie('upcoming')\r\n            .then(data => setUpComingMovies(data))\r\n            .catch(err => console.log(err))        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"hero-section\">\r\n                <div className=\"container\">\r\n                    <div className=\"hero-content\">\r\n                        <strong className=\"hero-subdescription\">the world need a hero, <br />they got a guy</strong>\r\n                        <h3 className=\"hero-title\">Free guy</h3>\r\n                        <h6 className=\"hero-subtitle\">july 3</h6>\r\n                        <Button className=\"primaryBtn-bg\"><img style={{ width: \"20px\", height: \"20px\" }} alt=\"hero\" src={process.env.PUBLIC_URL + \"/assets/images/play.svg\"} /><div style={{ marginTop: \"5px\" }}>watch trailer</div></Button>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n            <section className=\"category-section\">\r\n                <div className=\"container\">\r\n                    <div className=\"movie-slider-container\" >\r\n                        <h6 className=\"hero-title\">Now Playing</h6>\r\n                        {nowPlayingMovies ? <MovieList type=\"nowplaying\" movielist={nowPlayingMovies} /> : <Spinner />}\r\n                    </div>\r\n\r\n                    <div className=\"movie-slider-container\" >\r\n                        <h6 className=\"hero-title\">Popular</h6>\r\n                        <div className=\"movie-slider-innercontainer\">\r\n                            {popularMovies ? <MovieList type=\"popular\" movielist={popularMovies} /> : <Spinner />}\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"movie-slider-container\" >\r\n                        <h6 className=\"hero-title\">Top Rated</h6>\r\n                        <div className=\"movie-slider-innercontainer\">\r\n                            {topRatedMovies ? <MovieList type=\"toprated\" movielist={topRatedMovies} /> : <Spinner />}\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"movie-slider-container\" >\r\n                        <h6 className=\"hero-title\">Upcoming</h6>\r\n                        <div className=\"movie-slider-innercontainer\">\r\n                            {upcomingMovies ? <MovieList type=\"upcoming\" movielist={upcomingMovies} /> : <Spinner />}\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","export const filterMovieReducer = (state, action) => {\r\n    switch(action.type) {        \r\n        case \"NOW_PLAYING\":\r\n            return {\r\n                tag_name: \"now_playing\",\r\n                tag_index: 0\r\n            }\r\n        break;\r\n        case \"POPULAR\":\r\n            return {\r\n                tag_name: \"popular\",\r\n                tag_index: 1\r\n            }\r\n        break;\r\n        case \"UPCOMING\":\r\n            return {\r\n                tag_name: \"upcoming\",\r\n                tag_index: 2\r\n            }\r\n        break;\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { createContext, useReducer, useEffect } from \"react\";\r\nimport { filterMovieReducer } from \"../reducers/filterMovieReducer\";\r\n\r\nexport const FilterMovieContext = createContext();\r\n\r\nexport const FilterMovieContextProvider = (props) => {\r\n\r\n    const [tag, dispatch] = useReducer(filterMovieReducer, {tag_name: \"now_playing\", tag_index: 0}, () => {\r\n        const localData = localStorage.getItem('tag');\r\n        return localData ? JSON.parse(localData) : {tag_name: \"now_playing\", tag_index: 0}\r\n    })\r\n\r\n    useEffect(() => {\r\n        console.log(tag.tag_name)\r\n        localStorage.setItem('tag', JSON.stringify(tag))\r\n    }, [tag])\r\n\r\n    return (\r\n        <FilterMovieContext.Provider value={{tag, dispatch}}>\r\n            {props.children}\r\n        </FilterMovieContext.Provider>\r\n    )\r\n}\r\n\r\nexport default FilterMovieContextProvider","import React from 'react'\r\n\r\nconst Pagination = ({ history, key, number, currentPage }) => {\r\n    return (\r\n        <span onClick={e => history.push(`/movie?page=${number}`)} id={`${(number) == currentPage && \"pagination--active\"}`} >{number}</span>\r\n    )\r\n}\r\n\r\nexport default Pagination\r\n","import React, { useEffect, useState, useContext } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { fetchMovie } from '../api/FetchMovie'\r\nimport { Spinner } from 'reactstrap'\r\nimport { FilterMovieContext } from '../contexts/FilterMovieContext'\r\nimport Pagination from '../components/Pagination'\r\n\r\nconst Movie = (props) => {\r\n\r\n    // routes parameter\r\n    const queryString = require('query-string')\r\n    const { page } = queryString.parse(props.location.search)                \r\n\r\n    // state\r\n    const [tags, setTags] = useState([])    \r\n\r\n    const [totalPages, setTotalPages] = useState(0)\r\n    const [matchedResults, setMatchedResults] = useState([])\r\n\r\n    // reducers\r\n    const { dispatch, tag } = useContext(FilterMovieContext)\r\n    const keywords = useSelector(state => state.defaultState.keywords)\r\n\r\n    // Hooks\r\n    useEffect(() => {            \r\n        setTags(document.querySelectorAll('.tag'))                   \r\n    }, [])    \r\n\r\n    useEffect(() => {\r\n        \r\n    }, [keywords])\r\n\r\n    useEffect(() => {\r\n        \r\n        // If user clicks on new tag,\r\n        // reset the pagination number to 1\r\n        // if(type !== tag.tag_name)\r\n        //     props.history.push('/movie?page=1')\r\n\r\n        _displayMovies(tag.tag_name, page)\r\n        \r\n    }, [tag])\r\n\r\n    useEffect(() => {        \r\n        if (totalPages > 0)\r\n            _createPaginationNumber()\r\n    }, [totalPages])    \r\n\r\n    useEffect(() => {        \r\n        _displayMovies(tag.tag_name, page)\r\n    }, [page])\r\n\r\n    // Methods\r\n    const _displayMovies = (category, page) => {\r\n        if (matchedResults)\r\n            setMatchedResults([])\r\n\r\n        fetchMovie(category, page)\r\n            .then(data => {setMatchedResults(data.results); return data})\r\n            .then(data => setTotalPages(data.total_pages))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const _createPaginationNumber = () => {\r\n        \r\n        let elements = []                \r\n\r\n        for (var i = 0; i < totalPages; i++)\r\n            elements.push(<Pagination history={props.history} key={i+1} number={i+1} currentPage={page} />)\r\n        return elements\r\n    }\r\n\r\n    const _changeTag = (type) => {\r\n        \r\n        // If user clicks on new tag,\r\n        // reset the pagination number to 1\r\n        if(type !== tag.tag_name)\r\n            props.history.push('/movie?page=1')\r\n\r\n        dispatch({ type })                \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"movie-list\">\r\n                    <h5>Sort by:</h5>\r\n                    <div className=\"tag-container\">\r\n                        <div className=\"tag--desktop\">\r\n                            <span className={`tag ${tag.tag_index === 0 && 'tag--active'}`} onClick={() => _changeTag(\"NOW_PLAYING\")}>Now playing</span>\r\n                            <span className={`tag ${tag.tag_index === 1 && 'tag--active'}`} onClick={() => _changeTag(\"POPULAR\")}>Popular</span>\r\n                            <span className={`tag ${tag.tag_index === 2 && 'tag--active'}`} onClick={() => _changeTag(\"UPCOMING\")}>Upcoming</span>\r\n                        </div>\r\n                        <div className=\"tag--mobile\"> \r\n                            <span className={`tag ${tag.tag_index === 0 && 'tag--active'}`} onClick={() => _changeTag(\"NOW_PLAYING\")}>                                \r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\"><g data-name=\"Layer 2\"><path className=\"svg--secondary\" d=\"M16,31A15,15,0,1,1,31,16,15,15,0,0,1,16,31ZM16,3A13,13,0,1,0,29,16,13,13,0,0,0,16,3Z\"/><path className=\"svg--secondary\" d=\"M17,17H9a1,1,0,0,1-1-1H8a1,1,0,0,1,1-1h6V7a1,1,0,0,1,1-1h0a1,1,0,0,1,1,1Z\"/></g></svg>\r\n                                Now playing\r\n                            </span>\r\n                            <span className={`tag ${tag.tag_index === 1 && 'tag--active'}`} onClick={() => _changeTag(\"POPULAR\")}>\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" data-name=\"Layer 1\" viewBox=\"0 0 24 24\"><path className=\"svg--secondary\" d=\"M8.46777,8.39453l-.00225.00183-.00214.00208ZM18.42188,8.208a1.237,1.237,0,0,0-.23-.17481.99959.99959,0,0,0-1.39941.41114,5.78155,5.78155,0,0,1-1.398,1.77734,8.6636,8.6636,0,0,0,.1333-1.50977,8.71407,8.71407,0,0,0-4.40039-7.582,1.00009,1.00009,0,0,0-1.49121.80567A7.017,7.017,0,0,1,7.165,6.87793l-.23047.1875a8.51269,8.51269,0,0,0-1.9873,1.8623A8.98348,8.98348,0,0,0,8.60254,22.83594.99942.99942,0,0,0,9.98,21.91016a1.04987,1.04987,0,0,0-.0498-.3125,6.977,6.977,0,0,1-.18995-2.58106,9.004,9.004,0,0,0,4.3125,4.0166.997.997,0,0,0,.71534.03809A8.99474,8.99474,0,0,0,18.42188,8.208ZM14.51709,21.03906a6.964,6.964,0,0,1-3.57666-4.40234,8.90781,8.90781,0,0,1-.17969-.96387,1.00025,1.00025,0,0,0-.79931-.84473A.982.982,0,0,0,9.77,14.80957a.99955.99955,0,0,0-.8667.501,8.9586,8.9586,0,0,0-1.20557,4.71777,6.98547,6.98547,0,0,1-1.17529-9.86816,6.55463,6.55463,0,0,1,1.562-1.458.74507.74507,0,0,0,.07422-.05469s.29669-.24548.30683-.2511a8.96766,8.96766,0,0,0,2.89874-4.63269,6.73625,6.73625,0,0,1,1.38623,8.08789,1.00024,1.00024,0,0,0,1.18359,1.418,7.85568,7.85568,0,0,0,3.86231-2.6875,7.00072,7.00072,0,0,1-3.2793,10.457Z\"/></svg>\r\n                                Popular\r\n                            </span>\r\n                            <span className={`tag ${tag.tag_index === 2 && 'tag--active'}`} onClick={() => _changeTag(\"UPCOMING\")}>\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" data-name=\"Layer 3\" viewBox=\"0 0 46 46\"><defs><clipPath id=\"a\"><rect width=\"32\" height=\"32\" x=\"7\" y=\"7\" fill=\"none\"/></clipPath></defs><g clip-path=\"url(#a)\"><path className=\"svg--secondary\" d=\"M34,13V9h4V7H8V9h4v4a11,11,0,0,0,6.41,10A11,11,0,0,0,12,33v4H8v2H38V37H34V33a11,11,0,0,0-6.41-10A11,11,0,0,0,34,13ZM32,33v4H14V33a9,9,0,0,1,18,0ZM23,22a9,9,0,0,1-9-9V9H32v4A9,9,0,0,1,23,22Z\"/><rect width=\"6\" height=\"2\" x=\"18\" y=\"30\" fill=\"#1d1d1b\"/></g></svg>\r\n                                Upcoming\r\n                                </span>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        matchedResults.length > 0\r\n                            ? matchedResults.map((movie, index) => (                                \r\n                                <div className=\"movie-list__column\" onClick={e => props.history.push(`/m/${movie.id}`)}>\r\n                                    <div className=\"movie-list__column-container\" key={index}>\r\n                                        <img alt={movie.title} className=\"movie-list__column-poster\" src={\"http://image.tmdb.org/t/p/w300/\" + movie.poster_path} />\r\n\r\n                                        <div className=\"movie-list__column-info\">\r\n\r\n                                            <h5 className=\"movie-list__column-title\">{movie.title}</h5>\r\n                                            <p className=\"movie-list__column-description\">{movie.overview}</p>\r\n\r\n                                            <div className=\"d-flex align-items-center\">\r\n                                                <img className=\"icon\" src={process.env.PUBLIC_URL + '/assets/images/calendar.svg'} alt=\"calendar\" />\r\n                                                <p className=\"movie-slider-item-releaseDate my-0 mt-1 pl-2\">{movie.release_date}</p>\r\n                                            </div>\r\n\r\n                                            <div className=\"d-flex align-items-center\">\r\n                                                <img className=\"icon\" src={process.env.PUBLIC_URL + \"/assets/images/Star.svg\"} alt=\"rating\" />\r\n                                                <p className=\"my-0 mt-1 pl-2 movie-slider-item-rating\">{movie.vote_average}</p>\r\n                                            </div>\r\n\r\n                                            <div className=\"d-flex align-items-center\">\r\n                                                <img className=\"icon\" src={process.env.PUBLIC_URL + \"/assets/images/Tag.svg\"} alt=\"tag\" />\r\n                                                <p className=\"movie-slider-item-description my-0 mt-1 pl-2\">{movie.adult ? 'Adult, ' : null} {movie.original_language}</p>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                            : <Spinner />\r\n                    }\r\n                    <div className=\"movie-list-pagination\">\r\n                        {totalPages > 0 && _createPaginationNumber()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Movie\r\n","import React from 'react'\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News\r\n","import React from 'react'\r\n\r\nconst Contact = () => {\r\n    return (\r\n        <div>\r\n            Contact\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport { Spinner } from 'reactstrap'\r\nimport MovieList from '../components/MovieList'\r\n\r\nconst Key = `${process.env.REACT_APP_KEY}`;\r\n\r\nconst Detail = (props) => {\r\n\r\n    const { movieid } = props.match.params\r\n\r\n    const [data, setData] = useState()\r\n    const [videos, setVideos] = useState([])\r\n    const [recommendedMovies, setRecommendedMovies] = useState([])\r\n    const [similarMovies, setSimilarMovies] = useState([])\r\n\r\n    useEffect(() => {        \r\n        fetchDetail()\r\n        loadVideo()\r\n        loadSimilarMovies()\r\n        loadRecommendedMovies()             \r\n    }, [props.location.pathname])\r\n\r\n    useEffect(() => {\r\n        console.log(recommendedMovies)\r\n    }, [recommendedMovies])\r\n\r\n    const fetchDetail = () => {\r\n        axios\r\n            .get(`https://api.themoviedb.org/3/movie/${movieid}?api_key=${Key}`)\r\n            .then(res => setData(res.data))\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    const loadVideo = () => {\r\n        axios\r\n            .get(`https://api.themoviedb.org/3/movie/${movieid}/videos?api_key=${Key}`)\r\n            .then(res => setVideos(res.data.results))\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    const loadRecommendedMovies = () => {\r\n        axios\r\n            .get(`https://api.themoviedb.org/3/movie/${movieid}/recommendations?api_key=${Key}`)\r\n            .then(res => setRecommendedMovies(res.data))\r\n            .catch(err => console.log(err));        \r\n    }\r\n\r\n    const loadSimilarMovies = () => {\r\n        axios\r\n            .get(`https://api.themoviedb.org/3/movie/${movieid}/similar?api_key=${Key}`)\r\n            .then(res => setSimilarMovies(res.data))\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    // sections\r\n    const mainSection = () => (\r\n        <>\r\n            <section className=\"movie-detail-section\">\r\n                <div className=\"container\">\r\n                    <div className=\"movie-detail-innercontainer\">\r\n\r\n                        <div className=\"movie-detail-poster\">\r\n                            <img style={{ maxWidth: \"500px\", width: \"100%\" }} src={\"http://image.tmdb.org/t/p/w500/\" + data.poster_path} />\r\n                        </div>\r\n\r\n                        <div className=\"movie-detail-content\">\r\n\r\n                            <strong className=\"hero-subtitle mt-0\">Released on {data.release_date}</strong>\r\n\r\n                            <div className=\"movie-detail-header\">\r\n                                <h5 className=\"hero-title\">{data.title}</h5>\r\n                            </div>\r\n\r\n                            <div className=\"movie-detail-column\">\r\n                                <b className=\"mr-auto\">Rating</b>\r\n                                <div>\r\n                                    <span className=\"movie-rating\">{data.vote_average}</span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"movie-detail-column\">\r\n                                <b className=\"mr-auto\">Status</b>\r\n                                <div>\r\n                                    <span className=\"movie-status\">{data.status}</span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"movie-detail-column\">\r\n                                <b className=\"mr-auto\">Duration</b>\r\n                                <div>\r\n                                    <p className=\"movie-runtime my-0\">{data.runtime} hours</p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"movie-detail-column\">\r\n                                <b className=\"mr-auto\">Genres</b>\r\n                                <div>\r\n                                    <div className=\"d-flex flex-wrap\">\r\n                                        {data.genres.map((genre, index) => <span>{genre.name}{index === data.genres.length - 1 ? null : \", \"} </span>)}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"movie-detail-column\">\r\n                                <b className=\"mr-auto\">Overview</b>\r\n                                <div>\r\n                                    <strong className=\"movie-tagline\">{data.tagline ? '\"' + data.tagline + '\"' : null}</strong>\r\n                                    <p className=\"movie-overview\">\r\n                                        {data.overview}\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"movie-detail-column\">\r\n                                <b className=\"mr-auto\">Made from</b>\r\n                                <div className=\"d-flex flex-wrap flex-row\">\r\n                                    {data.production_countries.map(country => country && (\r\n                                        <span>{country.name} </span>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"d-flex flex-wrap\">\r\n\r\n                                {data.production_companies.map(company => company.logo_path && (\r\n                                    <img alt=\"logo\" className=\"my-1 company-logo\" src={'https://image.tmdb.org/t/p/w45/' + company.logo_path} />\r\n                                ))}\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n\r\n    const videoSection = () => (\r\n        <>\r\n            <section className=\"video-section\">\r\n                <div className=\"container\">\r\n                    <h6 className=\"hero-title\">Video</h6>\r\n                    {\r\n                        videos.length > 0\r\n                            ?\r\n                            <>\r\n                                <div className=\"video-list\">\r\n                                    {displayVideos()}\r\n                                </div>\r\n                            </>\r\n                            : <p className=\"text-white-50\">No video is found.</p>\r\n                    }\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n\r\n    const similarMovieSection = () => (\r\n        <>\r\n            <section className=\"similar-movie-section\">\r\n                <div className=\"container\">                    \r\n                    <div className=\"movie-slider-container\" > \r\n                        <h6 className=\"hero-title\">Similar Movie</h6>\r\n                        {similarMovies.results ? <MovieList type=\"similar\" movielist={similarMovies} /> : <Spinner />}                        \r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n\r\n    const recommendedSection = () => (\r\n        <>\r\n            <section className=\"recommended-movie-section\">\r\n                <div className=\"container\">                    \r\n                    <div className=\"movie-slider-container\" > \r\n                        <h6 className=\"hero-title\">Recommended Movie</h6>\r\n                        {recommendedMovies.results ? <MovieList type=\"recommended\" movielist={recommendedMovies} /> : <Spinner />}                        \r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n\r\n    // sub components\r\n    const displayVideos = () => (\r\n        <>\r\n            {\r\n                videos.map(video => {\r\n                    return (\r\n                        <>\r\n                            <iframe className=\"video\" src={`https://www.youtube.com/embed/${video.key}`} />\r\n                        </>\r\n                    )\r\n                })\r\n            }\r\n        </>\r\n    )\r\n\r\n    return (\r\n        <>\r\n            {data ? (\r\n                <>\r\n                    {mainSection()}\r\n                    {videoSection()}\r\n                    {similarMovieSection()}\r\n                    {recommendedSection()}\r\n\r\n                </>\r\n            ) : <Spinner />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Detail\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport TopBar from './components/TopBar';\r\nimport { HashRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\n// Pages\r\nimport Home from './pages/Home'\r\nimport Movie from './pages/Movie'\r\nimport News from './pages/News'\r\nimport Contact from './pages/Contact'\r\nimport Detail from './pages/Detail';\r\nimport { FilterMovieContextProvider } from './contexts/FilterMovieContext';\r\n\r\nfunction App() {    \r\n\r\n  return (\r\n    <FilterMovieContextProvider>\r\n      <div className=\"App\">      \r\n        <Router>    \r\n          <TopBar />\r\n          <Switch>\r\n            <Route path='/' exact component={Home} />          \r\n            <Route path='/news' exact component={News} />\r\n            <Route path='/contact' exact component={Contact} />\r\n            <Route path='/movie' exact component={Movie} />\r\n            <Route path='/m/:movieid' component={Detail} />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    </FilterMovieContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst defaultState = {\r\n    keywords: \"\",\r\n    language: \"\",\r\n    region: \"\"\r\n}\r\n\r\nconst movieReducer = (state = defaultState, action) => {    \r\n    switch(action.type) {\r\n        case \"ADD_KEYWORD\": \r\n            return {                \r\n                ...defaultState,\r\n                keywords: action.payload,\r\n            }\r\n        case \"REMOVE_KEYWORD\":\r\n            return {                \r\n                ...defaultState,\r\n                keywords: \"\",\r\n            }            \r\n        case \"ADD_LANGUAGE\":\r\n            return {                \r\n                ...defaultState,\r\n                language: action.payload,\r\n            }\r\n        case \"REMOVE_LANGUAGE\":\r\n            return {                \r\n                ...defaultState,\r\n                language: \"\",\r\n            }          \r\n        case \"ADD_REGION\":\r\n            return {                \r\n                ...defaultState,\r\n                region: action.payload,\r\n            }\r\n        case \"REMOVE_REGION\":\r\n            return {                \r\n                ...defaultState,\r\n                region: \"\",\r\n            }          \r\n        default:\r\n            return {\r\n                defaultState\r\n            }\r\n    }\r\n}\r\n\r\nexport default movieReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Provider } from 'react-redux';\r\nimport reducer from './reducers/movieReducer';\r\nimport { createStore } from 'redux'\r\n\r\nconst Movies = createStore(reducer)\r\n\r\nReactDOM.render(\r\n    <Provider store={Movies}>\r\n        <App />\r\n    </Provider>, \r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}